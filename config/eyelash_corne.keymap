#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E             &kp R  &kp T                            &mmv MOVE_UP                &kp Y            &kp U  &kp I      &kp O    &kp P     &kp LEFT_BRACKET
&kp ENTER  &kp A  &kp S  &kp D             &kp F  &kp G                   &kp ESC  &mkp LCLK     &kp LEFT_ALT  &kp H            &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp TAB    &kp Z  &kp X  &kp C             &kp V  &kp B      &kp SPACE             &kp TAB                     &kp N            &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSPACE
                         &kp LEFT_CONTROL  &mo 1  &kp SPACE                                                    &kp RIGHT_SHIFT  &mo 2  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp TAB         &kp F1   &kp F2   &kp F3    &kp F4  &kp F5                                   &mmv MOVE_UP                     &kp RA(NUMBER_2)  &kp C_NEXT  &kp UP_ARROW  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp ENTER
&trans          &kp F6   &kp F7   &kp F8    &kp F9  &kp F10                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp C_PP          &kp LEFT    &kp DOWN      &kp RIGHT          &kp END          &kp DELETE
&kp LEFT_SHIFT  &kp F11  &kp F12  &trans    &trans  &mkp RCLK  &kp C_MUTE                    &mmv MOVE_DOWN                   &trans            &trans      &trans        &trans             &kp END          &kp PG_DN
                                  &kp LGUI  &trans  &kp SPACE                                                                 &kp LEFT_SHIFT    &trans      &kp RALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                            &mmv MOVE_UP                     &kp CARET         &kp AMPS          &kp ASTRK         &kp LPAR          &kp UNDER   &kp KP_MINUS
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp RA(MINUS)     &kp RA(NUMBER_2)  &kp RA(NUMBER_3)  &kp RA(NUMBER_4)  &kp RA(N5)  &kp PIPE2
&trans  &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0     &trans                    &mmv MOVE_DOWN                   &kp RA(NUMBER_6)  &kp RA(N7)        &kp RA(N8)        &kp RA(N9)        &kp RA(N0)  &kp PIPE
                                    &kp LGUI      &trans        &kp SPACE                                                             &kp LEFT_SHIFT    &trans            &kp RALT
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock   &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_COLOR_HSB(0,0,100)  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD                                &mmv MOVE_UP                     &bl BL_TOG    &bl BL_INC    &kp F8        &kp F9        &kp F10          &kp F11
&rgb_ug RGB_OFF  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &mkp MCLK                       &mkp RCLK        &mkp MB4                       &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader   &mkp LCLK     &mkp MCLK     &mkp RCLK     &kp PRINTSCREEN  &kp F12
&rgb_ug RGB_ON   &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_EFF                 &trans           &mkp MB5         &kp C_MUTE                    &mmv MOVE_DOWN                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4     &bt BT_CLR
                                                   &trans                          &trans           &trans                                                                          &trans        &trans        &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        ACTIVATEL3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
